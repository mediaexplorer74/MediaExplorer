// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef TransitionEventInit_h
#define TransitionEventInit_h

#include "bindings/core/v8/Nullable.h"
#include "core/CoreExport.h"
#include "core/events/EventInit.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class CORE_EXPORT TransitionEventInit : public EventInit {
    ALLOW_ONLY_INLINE_ALLOCATION();
public:
    TransitionEventInit();

    bool hasElapsedTime() const { return !m_elapsedTime.isNull(); }
    double elapsedTime() const { return m_elapsedTime.get(); }
    void setElapsedTime(double value) { m_elapsedTime = value; }

    bool hasPropertyName() const { return !m_propertyName.isNull(); }
    String propertyName() const { return m_propertyName; }
    void setPropertyName(String value) { m_propertyName = value; }

    bool hasPseudoElement() const { return !m_pseudoElement.isNull(); }
    String pseudoElement() const { return m_pseudoElement; }
    void setPseudoElement(String value) { m_pseudoElement = value; }

    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<double> m_elapsedTime;
    String m_propertyName;
    String m_pseudoElement;

    friend class V8TransitionEventInit;
};

} // namespace blink

#endif // TransitionEventInit_h
