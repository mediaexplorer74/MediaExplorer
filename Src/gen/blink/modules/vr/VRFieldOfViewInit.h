// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef VRFieldOfViewInit_h
#define VRFieldOfViewInit_h

#include "bindings/core/v8/Nullable.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"

namespace blink {

class MODULES_EXPORT VRFieldOfViewInit {
    ALLOW_ONLY_INLINE_ALLOCATION();
public:
    VRFieldOfViewInit();

    bool hasDownDegrees() const { return !m_downDegrees.isNull(); }
    double downDegrees() const { return m_downDegrees.get(); }
    void setDownDegrees(double value) { m_downDegrees = value; }

    bool hasLeftDegrees() const { return !m_leftDegrees.isNull(); }
    double leftDegrees() const { return m_leftDegrees.get(); }
    void setLeftDegrees(double value) { m_leftDegrees = value; }

    bool hasRightDegrees() const { return !m_rightDegrees.isNull(); }
    double rightDegrees() const { return m_rightDegrees.get(); }
    void setRightDegrees(double value) { m_rightDegrees = value; }

    bool hasUpDegrees() const { return !m_upDegrees.isNull(); }
    double upDegrees() const { return m_upDegrees.get(); }
    void setUpDegrees(double value) { m_upDegrees = value; }

    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<double> m_downDegrees;
    Nullable<double> m_leftDegrees;
    Nullable<double> m_rightDegrees;
    Nullable<double> m_upDegrees;

    friend class V8VRFieldOfViewInit;
};

} // namespace blink

#endif // VRFieldOfViewInit_h
