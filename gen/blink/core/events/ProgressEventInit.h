// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef ProgressEventInit_h
#define ProgressEventInit_h

#include "bindings/core/v8/Nullable.h"
#include "core/CoreExport.h"
#include "core/events/EventInit.h"
#include "platform/heap/Handle.h"

namespace blink {

class CORE_EXPORT ProgressEventInit : public EventInit {
    ALLOW_ONLY_INLINE_ALLOCATION();
public:
    ProgressEventInit();

    bool hasLengthComputable() const { return !m_lengthComputable.isNull(); }
    bool lengthComputable() const { return m_lengthComputable.get(); }
    void setLengthComputable(bool value) { m_lengthComputable = value; }

    bool hasLoaded() const { return !m_loaded.isNull(); }
    unsigned long long loaded() const { return m_loaded.get(); }
    void setLoaded(unsigned long long value) { m_loaded = value; }

    bool hasTotal() const { return !m_total.isNull(); }
    unsigned long long total() const { return m_total.get(); }
    void setTotal(unsigned long long value) { m_total = value; }

    DECLARE_VIRTUAL_TRACE();

private:
    Nullable<bool> m_lengthComputable;
    Nullable<unsigned long long> m_loaded;
    Nullable<unsigned long long> m_total;

    friend class V8ProgressEventInit;
};

} // namespace blink

#endif // ProgressEventInit_h
