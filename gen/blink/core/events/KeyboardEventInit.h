// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef KeyboardEventInit_h
#define KeyboardEventInit_h

#include "bindings/core/v8/Nullable.h"
#include "core/CoreExport.h"
#include "core/events/EventModifierInit.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class CORE_EXPORT KeyboardEventInit : public EventModifierInit {
    ALLOW_ONLY_INLINE_ALLOCATION();
public:
    KeyboardEventInit();

    bool hasKeyIdentifier() const { return !m_keyIdentifier.isNull(); }
    String keyIdentifier() const { return m_keyIdentifier; }
    void setKeyIdentifier(String value) { m_keyIdentifier = value; }

    bool hasLocation() const { return !m_location.isNull(); }
    unsigned location() const { return m_location.get(); }
    void setLocation(unsigned value) { m_location = value; }

    bool hasRepeat() const { return !m_repeat.isNull(); }
    bool repeat() const { return m_repeat.get(); }
    void setRepeat(bool value) { m_repeat = value; }

    DECLARE_VIRTUAL_TRACE();

private:
    String m_keyIdentifier;
    Nullable<unsigned> m_location;
    Nullable<bool> m_repeat;

    friend class V8KeyboardEventInit;
};

} // namespace blink

#endif // KeyboardEventInit_h
