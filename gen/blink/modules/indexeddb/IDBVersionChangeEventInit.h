// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py. DO NOT MODIFY!

#ifndef IDBVersionChangeEventInit_h
#define IDBVersionChangeEventInit_h

#include "bindings/core/v8/Nullable.h"
#include "core/events/EventInit.h"
#include "modules/ModulesExport.h"
#include "platform/heap/Handle.h"
#include "wtf/text/WTFString.h"

namespace blink {

class MODULES_EXPORT IDBVersionChangeEventInit : public EventInit {
    ALLOW_ONLY_INLINE_ALLOCATION();
public:
    IDBVersionChangeEventInit();

    bool hasDataLoss() const { return !m_dataLoss.isNull(); }
    String dataLoss() const { return m_dataLoss; }
    void setDataLoss(String value) { m_dataLoss = value; }

    bool hasNewVersion() const { return !m_newVersion.isNull(); }
    unsigned long long newVersion() const { return m_newVersion.get(); }
    void setNewVersion(unsigned long long value) { m_newVersion = value; }
    void setNewVersionToNull() { m_newVersion = Nullable<unsigned long long>(); }

    bool hasOldVersion() const { return !m_oldVersion.isNull(); }
    unsigned long long oldVersion() const { return m_oldVersion.get(); }
    void setOldVersion(unsigned long long value) { m_oldVersion = value; }

    DECLARE_VIRTUAL_TRACE();

private:
    String m_dataLoss;
    Nullable<unsigned long long> m_newVersion;
    Nullable<unsigned long long> m_oldVersion;

    friend class V8IDBVersionChangeEventInit;
};

} // namespace blink

#endif // IDBVersionChangeEventInit_h
